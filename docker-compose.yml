version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    image: 'rabbitmq:3.6-management-alpine'
    expose:
      - 5672
      - 15672
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
       - vk_bot_network
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"

  bot_app:
    container_name: bot_app
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "alembic upgrade head && python main.py"
    networks:
      - vk_bot_network
    expose:
      - 8080
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      kts_postgres:
        condition: service_started

  poller:
    container_name: poller
    build:
      context: poller/
      dockerfile: Dockerfile
    networks:
      - vk_bot_network
    depends_on:
      rabbitmq:
          condition: service_healthy

  kts_postgres:
    container_name: kts_postgres
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=kts
      - POSTGRES_USER=kts_user
      - POSTGRES_PASSWORD=kts_pass
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - vk_bot_network

networks:
  vk_bot_network:

volumes:
  postgres_data:
